@using Authentication.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<style>
    /* Styling for input elements */
    .custom-input {
        padding: 10px;
        border-radius: 8px;
        border: 1px solid #6c757d; /* Dark gray border */
        background-color: #f8f9fa; /* Light gray background */
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        font-size: 16px;
        margin-bottom: 10px;
    }

        /* Hover state for input elements */
        .custom-input:hover {
            border-color: #495057; /* Darker gray border on hover */
        }

        /* Focus state for input elements */
        .custom-input:focus {
            border-color: #007bff; /* Blue border on focus */
            outline: none;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

    /* Styling for the button */
    .custom-button {
        display: inline-block;
        padding: 10px 20px;
        border-radius: 8px;
        border: none;
        background-color: #007bff; /* Blue button background */
        color: #ffffff; /* White button text color */
        font-size: 16px;
        font-weight: bold;
        text-align: center;
        text-decoration: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        /* Hover state for the button */
        .custom-button:hover {
            background-color: #0056b3; /* Darker blue on hover */
        }

        /* Focus state for the button */
        .custom-button:focus {
            outline: none;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        /* Disabled state for the button */
        .custom-button:disabled {
            background-color: #ccc; /* Light gray for disabled button */
            cursor: not-allowed;
        }

    /* Styling for the register link */
    .register-link a {
        color: #007bff; /* Blue color */
        text-decoration: none; /* Remove default underline */
        font-weight: bold; /* Make the text bold */
        transition: color 0.3s ease; /* Smooth color transition on hover */
    }

        /* Hover state for the register link */
        .register-link a:hover {
            color: #0056b3; /* Darker shade of blue on hover */
        }
</style>

<main aria-labelledby="title">
    <h2 class="products-page-title" id="title">@ViewBag.Title.</h2>
    <div class="row">
        <div class="col-md-8">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Use a local account to log in.</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "custom-input" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "custom-input" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="offset-md-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="offset-md-2 col-md-10">
                            <input type="submit" value="Log in" class="custom-button btn btn-outline-dark" />
                        </div>
                    </div>
                    <p class="register-link">
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>

                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>*@
                }
            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>
</main>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}